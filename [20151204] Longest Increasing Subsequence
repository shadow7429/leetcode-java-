// startTime: 23: 22
// finishTime: 23: 32
// https://leetcode.com/problems/longest-increasing-subsequence/

/*
思路就是遍历，到达每个点的时候看看前面有没有比它小的，用一个数组记录下来当前点处最长的
递增序列，所以在前面的基础上加1就可得到当前点处最长的递增序列。
*/
public class Solution {
    public int lengthOfLIS(int[] nums) {
        if (nums.length <= 1) return nums.length;
        int[] len = new int[nums.length];
        Arrays.fill(len, 1);
        int res = 0;
        
        for (int i = 1; i < nums.length; i++){
            for (int j = 0; j < i; j++){
                if (nums[j] < nums[i]) {
                   len[i] = Math.max(len[i], len[j] + 1);
                }
            }
            res = Math.max(res, len[i]);
        }
        return res;
    }
}
