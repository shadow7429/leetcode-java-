// The problem left yesterday
// https://leetcode.com/problems/basic-calculator-ii/

public class Solution {
    public int calculate(String s) {
        if (s.length() == 0) return 0;
        Stack<Integer> stack = new Stack<Integer>();
        int num = 0;
        char sign = '+';
        for (int i = 0; i < s.length(); i++){
            if (Character.isDigit(s.charAt(i))) num = num * 10 + s.charAt(i) - '0';
            if (!Character.isDigit(s.charAt(i)) && s.charAt(i) != ' ' || i == s.length() - 1){
                if (sign == '+') stack.push(num);
                else if (sign == '-') stack.push(-num);
                else if (sign == '*') stack.push(stack.pop() * num);
                else if (sign == '/') stack.push(stack.pop() / num);
                num = 0;
                sign = s.charAt(i);
            }
        }
        int res = 0;
        while (!stack.isEmpty()){
            res = res + stack.pop();
        }
        return res;
    }
}
/*
（1） 因为数字可能是两位数，所以if (Character.isDigit(s.charAt(i))) num = num * 10 + s.charAt(i) - '0';是通常遇到这种问题的
      做法。
（2） 因为如果已经到达最后了，但是最后的仍为数字，所以得到了num之后，需要将其按照之前的符号进行操作，所以第二个if之前并没有
      else，因为进入了第一个if之后可能因为 i == s.length() - 1 而进入第二个if。
*/
