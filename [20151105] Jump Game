// startTime: 20:36
// finishTime: 21:03
// https://leetcode.com/problems/jump-game/

public class Solution {
    public boolean canJump(int[] nums) {
        if (nums.length == 0 || nums.length == 1) return true;
        if (nums.length == 2 && nums[0] >= 1) return true;
        if (nums.length == 2 && nums[0] < 1) return false;
        int target = nums.length - 1;
        for (int i = nums.length - 2; i >= 0; i--)
            if (nums[i] >= (target - i)) target = i;
        if (target == 0) return true;
        else return false;
    }
}

/*
这道题我的想法就是从后往前看，如果第i位上的数字大小大于等于到达最后所需要的数字大小，那现在的目标就是到达i就可以了，因此一直往前
推，如果到最后可以将target赋为0，也就说明其后一定至少有条路径可以到达最后的。
*/
